---
import {
  projectsIdFetcher,
  projectsNextPrevFetcher,
  projectsPageContentFetcher,
} from "@/api";
import Layout from "@/layouts/Layout.astro";
import { dateConverter, months } from "@/utils/utils";
import { render } from "datocms-structured-text-to-html-string";
import ActionButton from "@/components/ActionButton.svelte";
import { nextPrevSlugMaker, idAbleToStaticPathConverter } from "@/utils/utils";
import Spacer from "@/components/Spacer.astro";
import Gallery from "@/components/Gallery.svelte";
import ToOther from "@/components/ToOther.astro";

const projectIDs = await projectsIdFetcher();

export async function getStaticPaths() {
  return idAbleToStaticPathConverter(await projectsIdFetcher());
}

const { slug } = Astro.params;

const { nextSlug, prevSlug } = nextPrevSlugMaker(
  slug ?? "",
  projectIDs.map(({ slug }) => slug)
);

const {
  projectName: nextProjectName,
  gradientEndColor: nextGradientEndColor,
  gradientStartColor: nextGradientStartColor,
} = await projectsNextPrevFetcher(nextSlug);

const {
  projectName: prevProjectName,
  gradientEndColor: prevGradientEndColor,
  gradientStartColor: prevGradientStartColor,
} = await projectsNextPrevFetcher(prevSlug);

const {
  description,
  galleryPhotos,
  galleryTitle,
  gradientEndColor,
  gradientStartColor,
  projectLink,
  projectName,
  projectStartDate,
  repositoryLink,
  shortDescription,
  techStack,
  projectEndDate,
  links,
  thumbnail: { thumbnail },
} = await projectsPageContentFetcher(slug ?? "");

const { month: startMonth, year: startYear } = dateConverter(projectStartDate);
const { month: endMonth, year: endYear } = projectEndDate
  ? dateConverter(projectEndDate)
  : { month: 0, year: 0 };
---

<Layout
  metaInfo={{
    title: `${projectName}`,
    description: `A project made by Fatih Nararya R. I. called ${projectName}. ${shortDescription}`,
    customThumbnail: thumbnail,
  }}
  activeNavigationOption={""}
>
  <div
    class="flex flex-col items-center justify-start w-full px-horizontalPaddingMobile lg:px-horizontalPaddingDesktop flex-grow text-silver-100"
  >
    <main
      class="flex flex-col items-center justify-start w-full max-w-2xl mx-auto flex-grow pb-4 border-b-2"
      style={`
        border-color: ${gradientEndColor};
    `}
    >
      <header
        class="flex flex-col items-start justify-start gap-2 w-full px-4 pb-2"
        style={`border-color: ${gradientStartColor};`}
      >
        <div class="flex flex-col items-start justify-start gap-1 w-full">
          <h1 class="text-4xl lg:text-5xl text-left font-black">
            {projectName}
          </h1>
          <p class="text-lg text-left text-silver-500">
            {shortDescription}
          </p>
        </div>
        <div class="flex justify-start gap-2 items-center text-silver-500">
          <i class="fa-regular fa-calendar-days" style={``}></i>
          <p class="text-base font-medium text-left">
            {months[startMonth - 1]}
            {startYear}
            {projectEndDate ? `- ${months[endMonth - 1]} ${endYear}` : null}
          </p>
        </div>
      </header>
      <div
        class="w-full border-y-[1px] py-2"
        style={`
        border-color: ${gradientEndColor};
    `}
      >
        <ActionButton client:visible stackContent={techStack}>
          <a
            href={repositoryLink}
            class="right-sidebar-button flex-grow"
            slot="side-button"
            target="_blank"
          >
            Visit the Repo
          </a>
          <a
            href={projectLink}
            class="right-sidebar-button flex-grow"
            slot="side-button"
            target="_blank"
          >
            Try the Project
          </a>
        </ActionButton>
      </div>
      <section
        class="summary-container flex flex-col items-start justify-start w-full px-4 pb-4 border-b-[1px]"
        style={`
        border-color: ${gradientEndColor};
    `}
      >
        <Fragment set:html={render(description)} />
      </section>
      <Gallery images={galleryPhotos} title={galleryTitle} client:visible />

      <Spacer />
      <div
        class="flex flex-col lg:flex-row w-full h-fit justify-items-stretch gap-2 lg:gap-4 text-xl border-t-[1px] pt-4 mt-4"
        style={`
            border-color: ${gradientEndColor};
        
        `}
      >
        <ToOther
          gradientStartColor={prevGradientStartColor}
          gradientEndColor={prevGradientEndColor}
          ;
          link={`/hobby-project/${prevSlug}`}
        >
          <p slot="other-title">{prevProjectName}</p>
        </ToOther>
        <Spacer />
        <ToOther
          gradientStartColor={nextGradientStartColor}
          gradientEndColor={nextGradientEndColor}
          next={true}
          ;
          link={`/hobby-project/${nextSlug}`}
          ><p slot="other-title">{nextProjectName}</p>
        </ToOther>
      </div>
    </main>
  </div>
</Layout>
