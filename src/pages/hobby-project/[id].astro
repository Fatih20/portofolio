---
import {
  projectsIdFetcher,
  projectsPageContentFetcher,
  projectsContentFetcher,
} from "@/api";
import Spacer from "@/components/Spacer.astro";
import Layout from "@/layouts/Layout.astro";
import { dateConverter, months, projectPCompareFunction } from "@/utils";
import { render } from "datocms-structured-text-to-html-string";
import Stack from "@/components/Stack.svelte";

export async function getStaticPaths() {
  return (await projectsIdFetcher()).allProjects.map(({ id }) => {
    return {
      params: { id },
    };
  });
}

const { id } = Astro.params;

const {
  description,
  galleryPhotos,
  galleryTitle,
  gradientEndColor,
  gradientStartColor,
  projectLink,
  projectName,
  projectStartDate,
  repositoryLink,
  shortDescription,
  techStack,
  projectEndDate,
} = await projectsContentFetcher(id ?? "");

// const projectIndexFromFetchedData = allProjects.findIndex(
//   ({ id: projectId }) => projectId === id
// );

// const b = allProjects[projectIndexFromFetchedData];

const processedTechStack = techStack.map(({ name }) => name);

// const nextProjectIndex = (projectIndexFromFetchedData + 1) % allProjects.length;
// const prevProjectIndex =
//   projectIndexFromFetchedData - 1 < 0
//     ? allProjects.length - 1
//     : projectIndexFromFetchedData - 1;

// const {
//   projectName: nextProjectName,
//   gradientEndColor: nextProjectGradientEndColor,
//   gradientStartColor: nextProjectGradientStartColor,
// } = allProjects[nextProjectIndex];

// const {
//   projectName: prevProjectName,
//   gradientEndColor: prevProjectGradientEndColor,
//   gradientStartColor: prevProjectGradientStartColor,
// } = allProjects[prevProjectIndex];

const { month: startMonth, year: startYear } = dateConverter(projectStartDate);
const { month: endMonth, year: endYear } = projectEndDate
  ? dateConverter(projectEndDate)
  : { month: 0, year: 0 };
---

<style>
  .summary-container :global(h2) {
    @apply text-3xl font-bold mt-4;
  }

  .summary-container :global(h3) {
    @apply text-2xl font-bold;
  }

  .summary-container :global(h4) {
    @apply text-xl font-bold;
  }

  .summary-container :global(h5) {
    @apply text-xl font-medium;
  }
</style>

<Layout
  title={`${projectName}`}
  pageDescription={`${shortDescription} - Made by Fatih NRI`}
  activeNavigationOption={""}
>
  <Stack
    client:visible
    stackContent={processedTechStack}
    startColor={gradientStartColor}
    endColor={gradientEndColor}
  />
  <div
    class="flex flex-col items-center justify-start w-full px-horizontalPaddingMobile lg:px-horizontalPaddingDesktop flex-grow text-silver-100"
  >
    <main
      class="flex flex-col items-center justify-start w-full max-w-5xl mx-auto flex-grow border-b-2 pb-4"
      style={`
      border-color: ${gradientEndColor};
  `}
    >
      <header
        class="flex flex-col items-start justify-start gap-2 w-full px-4 pb-2 border-b-[1px]"
        style={`border-color: ${gradientStartColor};`}
      >
        <div class="flex flex-col items-start justify-start gap-1 w-full">
          <h1 class="text-4xl lg:text-5xl text-left font-black">
            {projectName}
          </h1>
          <p class="text-xl text-left text-silver-500">
            {shortDescription}
          </p>
        </div>
        <div class="flex justify-start gap-2 items-center text-silver-500">
          <i class="fa-regular fa-calendar-days" style={``}></i>
          <p class="text-base font-medium text-left">
            {months[startMonth - 1]}
            {startYear}
            {projectEndDate ? `${months[endMonth - 1]} ${endYear}` : null}
          </p>
        </div>
      </header>
      <section
        class="summary-container flex flex-col items-start justify-start w-full rounded-lg px-4 pb-4"
        style={`
        border-color: ${gradientEndColor};
    `}
      >
        <Fragment set:html={render(description)} />
      </section>

      <!-- <Spacer />
      <div
        class="flex flex-col lg:flex-row w-full text-silver-100 h-fit justify-items-stretch gap-2 lg:gap-4 text-xl"
      >
        <a
          href={`/portofolio/${allProjects[prevProjectIndex].id}`}
          class="flex items-center justify-start w-full lg:w-1/2 gap-2 rounded-lg px-4 py-2 bg-gradient-to-b hover:shadow-hoveredCard hover:scale-101 transition-all"
          style={`
            --tw-gradient-from: ${prevProjectGradientStartColor};
            --tw-gradient-to: ${prevProjectGradientEndColor};
            --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
            --tw-shadow-color: ${prevProjectGradientStartColor};
            --tw-shadow: var(--tw-shadow-colored);
        `}
        >
          <i class="fa-solid fa-arrow-left text-xl"></i>
          <p>
            {prevProjectName}
          </p>
        </a>
        <Spacer />
        <a
          href={`/portofolio/${allProjects[nextProjectIndex].id}`}
          class="flex items-center justify-end w-full lg:w-1/2 gap-2 rounded-lg px-4 py-2 bg-gradient-to-b hover:shadow-hoveredCard hover:scale-101 transition-all"
          style={`
            --tw-gradient-from: ${nextProjectGradientStartColor};
            --tw-gradient-to: ${nextProjectGradientEndColor};
            --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
            --tw-shadow-color: ${nextProjectGradientStartColor};
            --tw-shadow: var(--tw-shadow-colored);
        `}
        >
          <p>
            {nextProjectName}
          </p>
          <i class="fa-solid fa-arrow-right text-xl"></i>
        </a>
      </div> -->
    </main>
  </div>
</Layout>
