---
import {
  projectsIdFetcher,
  projectsNextPrevFetcher,
  projectsPageContentFetcher,
} from "@/api";
import Layout from "@/layouts/Layout.astro";
import { dateConverter, months } from "@/utils";
import { render } from "datocms-structured-text-to-html-string";
import ActionButton from "@/components/ActionButton.svelte";
import { nextPrevIDMaker, idAbleToStaticPathConverter } from "@/utils";
import Spacer from "@/components/Spacer.astro";
import Gallery from "@/components/Gallery.svelte";

const projectIDs = await projectsIdFetcher();

export async function getStaticPaths() {
  return idAbleToStaticPathConverter(await projectsIdFetcher());
}

const { id } = Astro.params;

const { nextID, prevID } = nextPrevIDMaker(
  id ?? "",
  projectIDs.map(({ id }) => id)
);

const {
  projectName: nextProjectName,
  gradientEndColor: nextGradientEndColor,
  gradientStartColor: nextGradientStartColor,
} = await projectsNextPrevFetcher(nextID);

const {
  projectName: prevProjectName,
  gradientEndColor: prevGradientEndColor,
  gradientStartColor: prevGradientStartColor,
} = await projectsNextPrevFetcher(prevID);

const {
  description,
  galleryPhotos,
  galleryTitle,
  gradientEndColor,
  gradientStartColor,
  projectLink,
  projectName,
  projectStartDate,
  repositoryLink,
  shortDescription,
  techStack,
  projectEndDate,
} = await projectsPageContentFetcher(id ?? "");

const { month: startMonth, year: startYear } = dateConverter(projectStartDate);
const { month: endMonth, year: endYear } = projectEndDate
  ? dateConverter(projectEndDate)
  : { month: 0, year: 0 };
---

<Layout
  title={`${projectName}`}
  pageDescription={`A project made by Fatih Nararya R. I. called ${projectName}. ${shortDescription}`}
  activeNavigationOption={""}
>
  <div
    class="flex flex-col items-center justify-start w-full px-horizontalPaddingMobile lg:px-horizontalPaddingDesktop flex-grow text-silver-100"
  >
    <main
      class="flex flex-col items-center justify-start w-full max-w-5xl mx-auto flex-grow pb-4 border-b-2"
      style={`
        border-color: ${gradientEndColor};
    `}
    >
      <header
        class="flex flex-col items-start justify-start gap-2 w-full px-4 pb-2"
        style={`border-color: ${gradientStartColor};`}
      >
        <div class="flex flex-col items-start justify-start gap-1 w-full">
          <h1 class="text-4xl lg:text-5xl text-left font-black">
            {projectName}
          </h1>
          <p class="text-lg text-left text-silver-500">
            {shortDescription}
          </p>
        </div>
        <div class="flex justify-start gap-2 items-center text-silver-500">
          <i class="fa-regular fa-calendar-days" style={``}></i>
          <p class="text-base font-medium text-left">
            {months[startMonth - 1]}
            {startYear}
            {projectEndDate ? `- ${months[endMonth - 1]} ${endYear}` : null}
          </p>
        </div>
      </header>
      <div
        class="w-full border-y-[1px] py-2"
        style={`
        border-color: ${gradientEndColor};
    `}
      >
        <ActionButton client:visible stackContent={techStack}>
          <a
            href={repositoryLink}
            class="right-sidebar-button flex-grow"
            slot="side-button"
            target="_blank"
          >
            Visit the Repo
          </a>
          <a
            href={projectLink}
            class="right-sidebar-button flex-grow"
            slot="side-button"
            target="_blank"
          >
            Try the Project
          </a>
        </ActionButton>
      </div>
      <section
        class="summary-container flex flex-col items-start justify-start w-full px-4 pb-4 border-b-[1px]"
        style={`
        border-color: ${gradientEndColor};
    `}
      >
        <Fragment set:html={render(description)} />
      </section>
      <Gallery images={galleryPhotos} title={galleryTitle} client:visible />

      <Spacer />
      <div
        class="flex flex-col lg:flex-row w-full h-fit justify-items-stretch gap-2 lg:gap-4 text-xl border-t-[1px] pt-4 mt-4"
        style={`
            border-color: ${gradientEndColor};
        
        `}
      >
        <a
          href={`/hobby-project/${prevID}`}
          class="group next-prev justify-start bg-gradient-to-r"
          style={`
            border-color: ${gradientEndColor};
            --tw-gradient-from: ${prevGradientStartColor};
            --tw-gradient-to: ${prevGradientEndColor};
            --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
            --tw-shadow-color: ${prevGradientStartColor};
            --tw-shadow: var(--tw-shadow-colored);
        `}
        >
          <i class="fa-solid fa-arrow-left text-xl group-hover:-translate-x-1"
          ></i>
          <p class="">
            {prevProjectName}
          </p>
        </a>
        <Spacer />
        <a
          href={`/hobby-project/${nextID}`}
          class="group next-prev justify-end bg-gradient-to-l"
          style={`
            --tw-gradient-from: ${nextGradientStartColor};
            --tw-gradient-to: ${nextGradientEndColor};
            --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
            --tw-shadow-color: ${nextGradientStartColor};
            --tw-shadow: var(--tw-shadow-colored);
        `}
        >
          <p class="">
            {nextProjectName}
          </p>
          <i class="fa-solid fa-arrow-right text-xl group-hover:translate-x-1"
          ></i>
        </a>
      </div>
    </main>
  </div>
</Layout>
