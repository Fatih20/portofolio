---
import { munPageContentFetcher, munIdFetcher } from "@/api";
import Layout from "@/layouts/Layout.astro";
import { dateConverter, idAbleToStaticPathConverter } from "@/utils";
import { render } from "datocms-structured-text-to-html-string";

const munIDs = await munIdFetcher();

export async function getStaticPaths() {
  return idAbleToStaticPathConverter(await munIdFetcher());
}

const { id } = Astro.params;

const {
  description,
  galleryPhotos,
  galleryTitle,
  gradientEndColor,
  gradientStartColor,
  council,
  country,
  eventName,
  roleOrAward,
  shortRemark,
  startDate,
  topic,
} = await munPageContentFetcher(id ?? "");

const { flag, name: countryName } = country[0];
const { name: councilName, acronym: councilAcronym } = council[0];

// const projectIndexFromFetchedData = allProjects.findIndex(
//   ({ id: projectId }) => projectId === id
// );

// const b = allProjects[projectIndexFromFetchedData];

// const nextProjectIndex = (projectIndexFromFetchedData + 1) % allProjects.length;
// const prevProjectIndex =
//   projectIndexFromFetchedData - 1 < 0
//     ? allProjects.length - 1
//     : projectIndexFromFetchedData - 1;

// const {
//   projectName: nextProjectName,
//   gradientEndColor: nextProjectGradientEndColor,
//   gradientStartColor: nextProjectGradientStartColor,
// } = allProjects[nextProjectIndex];

// const {
//   projectName: prevProjectName,
//   gradientEndColor: prevProjectGradientEndColor,
//   gradientStartColor: prevProjectGradientStartColor,
// } = allProjects[prevProjectIndex];

const { year } = dateConverter(startDate);
---

<style>
  .summary-container :global(h2) {
    @apply text-3xl font-bold mt-4;
  }

  .summary-container :global(h3) {
    @apply text-2xl font-bold;
  }

  .summary-container :global(h4) {
    @apply text-xl font-bold;
  }

  .summary-container :global(h5) {
    @apply text-xl font-medium;
  }
</style>

<Layout
  title={`${eventName}`}
  pageDescription={`Fatih Nararya R. I. experience in ${eventName} ${year}. ${shortRemark}`}
  activeNavigationOption={""}
>
  <div
    class="flex flex-col items-center justify-start w-full px-horizontalPaddingMobile lg:px-horizontalPaddingDesktop flex-grow text-silver-100"
  >
    <main
      class="flex flex-col items-center justify-start w-full max-w-5xl mx-auto flex-grow pb-4 border-b-2"
      style={`
        border-color: ${gradientEndColor};
    `}
    >
      <header
        class="flex flex-col items-start justify-start gap-2 w-full px-4 pb-2"
        style={`border-color: ${gradientStartColor};`}
      >
        <div class="flex flex-col items-start justify-start gap-1 w-full">
          <h1 class="text-4xl lg:text-5xl text-left font-black">
            {eventName}
          </h1>
          <h2 class="text-2xl text-left font-bold">
            {year}
          </h2>
          <p class="text-xl text-left text-silver-500">
            {shortRemark}
          </p>
        </div>
      </header>
      <div
        class="w-full border-y-[1px] py-2 px-4 flex flex-col justify-start items-start gap-2"
        style={`
        border-color: ${gradientEndColor};
        --icon-color: ${gradientEndColor};
    `}
      >
        <div class="attribute-container">
          <i class="fa-solid fa-building-columns"></i>
          <p class="attribute">{councilAcronym} ({councilName})</p>
        </div>
        <div class="attribute-container">
          <i class="fa-solid fa-flag"></i>
          <p class="attribute">{countryName} ({flag})</p>
        </div>
        <div class="attribute-container items-start">
          <i class="fa-solid fa-question"></i>
          <p class="attribute">{topic.map(({ name }) => name).join(" & ")}</p>
          <!-- <div class="flex flex-col items-start justify-start">
            {topic.map(({ name }) => <p class="attribute">{name}</p>)}
          </div> -->
        </div>
        <div class="attribute-container">
          <i class="fa-solid fa-award"></i>
          <p class="attribute">{roleOrAward}</p>
        </div>
      </div>
      <section
        class="summary-container flex flex-col items-start justify-start w-full rounded-lg px-4 pb-4"
        style={`
        border-color: ${gradientEndColor};
    `}
      >
        <Fragment set:html={render(description)} />
      </section>

      <!-- <Spacer />
      <div
        class="flex flex-col lg:flex-row w-full text-silver-100 h-fit justify-items-stretch gap-2 lg:gap-4 text-xl"
      >
        <a
          href={`/portofolio/${allProjects[prevProjectIndex].id}`}
          class="flex items-center justify-start w-full lg:w-1/2 gap-2 rounded-lg px-4 py-2 bg-gradient-to-b hover:shadow-hoveredCard hover:scale-101 transition-all"
          style={`
            --tw-gradient-from: ${prevProjectGradientStartColor};
            --tw-gradient-to: ${prevProjectGradientEndColor};
            --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
            --tw-shadow-color: ${prevProjectGradientStartColor};
            --tw-shadow: var(--tw-shadow-colored);
        `}
        >
          <i class="fa-solid fa-arrow-left text-xl"></i>
          <p>
            {prevProjectName}
          </p>
        </a>
        <Spacer />
        <a
          href={`/portofolio/${allProjects[nextProjectIndex].id}`}
          class="flex items-center justify-end w-full lg:w-1/2 gap-2 rounded-lg px-4 py-2 bg-gradient-to-b hover:shadow-hoveredCard hover:scale-101 transition-all"
          style={`
            --tw-gradient-from: ${nextProjectGradientStartColor};
            --tw-gradient-to: ${nextProjectGradientEndColor};
            --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
            --tw-shadow-color: ${nextProjectGradientStartColor};
            --tw-shadow: var(--tw-shadow-colored);
        `}
        >
          <p>
            {nextProjectName}
          </p>
          <i class="fa-solid fa-arrow-right text-xl"></i>
        </a>
      </div> -->
    </main>
  </div>
</Layout>

<style>
  .attribute-container {
    @apply flex justify-start items-center gap-2;
  }

  .attribute-container i {
    color: var(--icon-color);
  }

  .attribute {
    @apply font-medium text-left;
  }
</style>
