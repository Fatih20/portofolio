---
import { munPageContentFetcher, munIdFetcher, munNextPrevFetcher } from "@/api";
import Spacer from "@/components/Spacer.astro";
import Layout from "@/layouts/Layout.astro";
import {
  dateConverter,
  idAbleToStaticPathConverter,
  nextPrevSlugMaker,
} from "@/utils/utils";
import { render } from "datocms-structured-text-to-html-string";
import MUNAwardPage from "@/components/Card/MUNAward/MUNAwardPage.astro";
import ToOther from "@/components/ToOther.astro";

const munIDs = await munIdFetcher();

export async function getStaticPaths() {
  return idAbleToStaticPathConverter(await munIdFetcher());
}

const { slug } = Astro.params;

const { nextSlug, prevSlug } = nextPrevSlugMaker(
  slug ?? "",
  munIDs.map(({ slug }) => slug)
);

const {
  eventName: nextEventName,
  startDate: nextStartDate,
  gradientEndColor: nextGradientEndColor,
  gradientStartColor: nextGradientStartColor,
} = await munNextPrevFetcher(nextSlug);

const {
  eventName: prevEventName,
  startDate: prevStartDate,
  gradientEndColor: prevGradientEndColor,
  gradientStartColor: prevGradientStartColor,
} = await munNextPrevFetcher(prevSlug);

const { year: prevYear } = dateConverter(prevStartDate);
const { year: nextYear } = dateConverter(nextStartDate);

const {
  description,
  galleryPhotos,
  galleryTitle,
  gradientEndColor,
  gradientStartColor,
  council,
  country,
  eventName,
  roleOrAward,
  shortRemark,
  startDate,
  bestPositionPaper,
  topic,
} = await munPageContentFetcher(slug ?? "");

const { flag, name: countryName } = country[0];
const { name: councilName, acronym: councilAcronym } = council[0];

const { year } = dateConverter(startDate);
---

<Layout
  title={`${eventName}`}
  pageDescription={`Fatih Nararya R. I. experience in ${eventName} ${year}. ${shortRemark}`}
  activeNavigationOption={""}
>
  <div
    class="flex flex-col items-center justify-start w-full px-horizontalPaddingMobile lg:px-horizontalPaddingDesktop flex-grow text-silver-100"
  >
    <main
      class="flex flex-col items-center justify-start w-full max-w-2xl mx-auto flex-grow pb-4 border-b-2"
      style={`
        border-color: ${gradientEndColor};
    `}
    >
      <header
        class="flex flex-col items-start justify-start gap-2 w-full px-4 pb-2"
        style={`border-color: ${gradientStartColor};`}
      >
        <div class="flex flex-col items-start justify-start gap-1 w-full">
          <h1 class="text-4xl lg:text-5xl text-left font-black">
            {eventName}
          </h1>
          <h2 class="text-2xl text-left font-bold">
            {year}
          </h2>
          <p class="text-xl text-left text-silver-500">
            {shortRemark}
          </p>
        </div>
      </header>
      <div
        class="w-full border-y-[1px] py-2 px-4 flex flex-col justify-start items-start gap-2"
        style={`
        border-color: ${gradientEndColor};
        --icon-color: ${gradientEndColor};
    `}
      >
        <div class="attribute-container">
          <i class="fa-solid fa-building-columns"></i>
          <p class="attribute">{councilAcronym} ({councilName})</p>
        </div>
        <div class="attribute-container items-start">
          <i class="fa-solid fa-question"></i>
          <p class="attribute">{topic.map(({ name }) => name).join(" & ")}</p>
          <!-- <div class="flex flex-col items-start justify-start">
            {topic.map(({ name }) => <p class="attribute">{name}</p>)}
          </div> -->
        </div>
        <div class="attribute-container">
          <i class="fa-solid fa-flag"></i>
          <p class="attribute">{countryName} ({flag})</p>
        </div>
        <MUNAwardPage
          bestPositionPaper={bestPositionPaper}
          roleOrAward={roleOrAward}
        />
      </div>
      <section
        class="summary-container flex flex-col items-start justify-start w-full rounded-lg px-4 pb-4"
        style={`
        border-color: ${gradientEndColor};
    `}
      >
        <Fragment set:html={render(description)} />
      </section>

      <Spacer />
      <div
        class="flex flex-col lg:flex-row w-full text-silver-100 h-fit justify-items-stretch gap-2 lg:gap-4 text-xl"
      >
        <ToOther
          gradientStartColor={prevGradientStartColor}
          gradientEndColor={prevGradientEndColor}
          ;
          link={`/mun/${prevSlug}`}
        >
          <div class="flex flex-col" slot="other-title">
            <p>
              {prevEventName}
            </p>
            <p class="text-sm">
              {prevYear}
            </p>
          </div>
        </ToOther>
        <Spacer />
        <ToOther
          gradientStartColor={nextGradientStartColor}
          gradientEndColor={nextGradientEndColor}
          next={true}
          ;
          link={`/mun/${nextSlug}`}
        >
          <div class="flex flex-col" slot="other-title">
            <p>
              {nextEventName}
            </p>
            <p class="text-sm">
              {nextYear}
            </p>
          </div>
        </ToOther>
      </div>
    </main>
  </div>
</Layout>

<style is:global>
  .attribute-container {
    @apply flex justify-start items-center gap-2;
  }

  .attribute-container i {
    color: var(--icon-color);
  }

  .attribute {
    @apply font-medium text-left;
  }
</style>
